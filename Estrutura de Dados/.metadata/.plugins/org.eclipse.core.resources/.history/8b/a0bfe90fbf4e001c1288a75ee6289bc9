package application;

public class ListaEncadeada<T> {
	No<T> referenciaEntrada;
	
	public ListaEncadeada() {
		referenciaEntrada = null;
	}
	
	public void add(T conteudo) {
		No<T> novoNo = new No<>(conteudo);
		if(isEmpty()) {
			referenciaEntrada = novoNo;
			return;
		}
		
		No<T> noAuxiliar = referenciaEntrada;
		for (int i = 0; i < this.size()-1; i++) {
			noAuxiliar=noAuxiliar.getProximoNo();
		}
		
		noAuxiliar.setProximoNo(novoNo);
	}
	
	public int size() {
		int size=0;
		No<T> noAuxiliar = referenciaEntrada;
		
		while(noAuxiliar != null) {
			size ++;
			noAuxiliar = noAuxiliar.getProximoNo();
		}
		return size;
	}
	
	public boolean isEmpty() {
		return referenciaEntrada == null ? true : false;
	}
	
	private No<T> getNo(int index){
		
		validarIndice(index);
		
		No<T> noAuxiliar = referenciaEntrada;
		No<T> noRetorno = null;
		
		for (int i = 0; i < index-1; i++) {
			noRetorno = noAuxiliar;
			noAuxiliar = noAuxiliar.getProximoNo();
		}
		return noRetorno;
	}

	private void validarIndice(int index) {
		if(index >= size()) {
			throw new IndexOutOfBoundsException("Não existe conteúdo no índice " + index);
		}
		
	}
	
	
}
